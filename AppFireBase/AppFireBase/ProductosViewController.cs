// This file has been autogenerated from a class added in the UI designer.

using System;
using Firebase.Database;
using Foundation;
using UIKit;

namespace AppFireBase
{
	public partial class ProductosViewController : UIViewController
	{

        Utilidades objUtilidades;

        DatabaseReference referenceBD;

        bool esModificacion = false;

		public ProductosViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad()
		{
            base.ViewDidLoad();

            referenceBD = Database.DefaultInstance.GetRootReference();

            objUtilidades = new Utilidades(this);

            inicializar();

            Eventos();
		}

        void Eventos(){

            btnAceptar.TouchUpInside += BtnAceptar_TouchUpInside;
        }

        void BtnAceptar_TouchUpInside(object sender, EventArgs e)
        {
            if (!esModificacion)
            {
                DatabaseReference Nodoproductos = referenceBD.GetChild("Productos").GetChild(Guid.NewGuid().ToString());

                object[] keys = { "Nombre", "Existencia" };
                object[] values = { txtNombreProducto.Text, txtExistencia.Text };

                var data = NSDictionary.FromObjectsAndKeys(values, keys, keys.Length);

                Nodoproductos.SetValue<NSDictionary>(data);

            }
        }


        void  inicializar(){

            modificarBoton(btnAceptar);
        }

        void modificarBoton(UIButton boton)
        {

            boton.Layer.BorderColor = objUtilidades.FromHexString("#428bca").CGColor;

            boton.Layer.BorderWidth = 1f;

            boton.Layer.CornerRadius = 10f;

            boton.SetTitleColor(objUtilidades.FromHexString("#428bca"), UIControlState.Normal);

            var Font = UIFont.FromName("Arial", 18f);

            boton.Font = Font;

            boton.TitleLabel.AdjustsFontSizeToFitWidth = true;

            boton.TitleLabel.MinimumScaleFactor = 0.5f;

        }
	}
}
